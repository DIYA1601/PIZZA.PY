def password_check(password):
l, u, p, d = 0, 0, 0, 0
if (len(password) >= 8 and len(password) <= 15):
for i in password:
# counting lowercase alphabets
if (i.islower()):
l+=1
# counting uppercase alphabets
if (i.isupper()):
u+=1
# counting digits
if (i.isdigit()):
d+=1
# counting the mentioned special characters
if(i=='@'or i=='$' or i=='_'):
p+=1
if (l>=1 and u>=1 and p>=1 and d>=1 and l+p+u+d==len(password)):
return True
else:
return False
else:
return False
d={"student0":'Student@0',"student1":'Student@11',"student2":
â†ª'Student@121',"student3":'Student@052',"student4":'Student@01278',
"student5":'Student@0125', "student6":'Student@042',"student7":
â†ª'Student@07800',"student8":'Student@012',
"student9":'Student@04789'}
first_password_username_count=0
s=" "
while first_password_username_count<3:
if s=="stop":
break
username=input("enter correct username:")
password=input("enter correct password:")
if ((username not in d.keys()) or (d[username]!=password)):
print("enter correct username and password")
first_password_username_count+=1
continue
else:
#update password
update_count=0
while(update_count<3):
update_password=input("enter update password: ")
if password_check(update_password):
d[username]=update_password
s="stop"
break


else:
update_count+=1
print(""" # The Password must have:
1. at least 1 number between 0 and 9
2. at least 1 upper letter (between a and z)
3. at least 1 lower letter (between A and Z)
4. at least 1 special character out of @$_:
5. minimum length of password is 8 and maximum length is 15""")
continue
else:
print("try after 24h")
s="stop"
break

else:
print("try after 24h")
print(d)
#Find and print longest and shortest password with its username
sorted_list=sorted(d.items(),key=lambda x:len(x[1]))
print("longest password",sorted_list[-1][0],"--",sorted_list[-1][1])
print("shortest password",sorted_list[0][0],"--",sorted_list[0][1])